{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMdyve5bMBK9N1AEkGwXV3l",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sudenaz11/hu-bby162-2024/blob/main/proje2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gcbyWFBOQ1b9",
        "outputId": "1ef93c5e-d39e-490f-dee0-47780f3bcf23"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Seviye seçin: 1 - Kolay, 2 - Orta, 3 - Zor\n",
            "Seçiminiz: 1\n",
            "Adam Asmaca Oyununa Hoşgeldiniz!\n",
            "_ _ _ _ _ _ _ _\n",
            "Kalan can: 7\n",
            "Bir harf giriniz: t\n",
            "t _ _ _ t _ _ _\n",
            "Kalan can: 7\n",
            "Bir harf giriniz: r\n",
            "t r _ _ t _ _ _\n",
            "Kalan can: 7\n",
            "Bir harf giriniz: a\n",
            "t r _ a t _ _ _\n",
            "Kalan can: 7\n",
            "Bir harf giriniz: t\n",
            "t r _ a t _ _ _\n",
            "Kalan can: 7\n",
            "Bir harf giriniz: l\n",
            "t r _ a t l _ _\n",
            "Kalan can: 7\n",
            "Bir harf giriniz: i\n",
            "t r i a t l _ _\n",
            "Kalan can: 7\n",
            "Bir harf giriniz: o\n",
            "t r i a t l o _\n",
            "Kalan can: 7\n",
            "Bir harf giriniz: n\n",
            "t r i a t l o n\n",
            "Kalan can: 7\n",
            "Tebrikler, kelimeyi doğru tahmin ettiniz! Kazandınız!\n",
            "Yeniden oynamak ister misiniz? (E/H): e\n",
            "Seviye seçin: 1 - Kolay, 2 - Orta, 3 - Zor\n",
            "Seçiminiz: 1\n",
            "Adam Asmaca Oyununa Hoşgeldiniz!\n",
            "_ _ _ _\n",
            "Kalan can: 7\n",
            "Bir harf giriniz: t\n",
            "_ _ _ _\n",
            "Kalan can: 6\n",
            "Bir harf giriniz: b\n",
            "_ _ _ _\n",
            "Kalan can: 5\n",
            "Bir harf giriniz: k\n",
            "k _ _ _\n",
            "Kalan can: 5\n",
            "Bir harf giriniz: o\n",
            "k o _ _\n",
            "Kalan can: 5\n",
            "Bir harf giriniz: ş7\n",
            "k o _ _\n",
            "Kalan can: 4\n",
            "Bir harf giriniz: s\n",
            "k o _ _\n",
            "Kalan can: 3\n",
            "Bir harf giriniz: d\n",
            "k o _ _\n",
            "Kalan can: 2\n",
            "Bir harf giriniz: d\n",
            "k o _ _\n",
            "Kalan can: 1\n",
            "Bir harf giriniz: f\n",
            "k o _ _\n",
            "Kalan can: 0\n",
            "Maalesef, kaybettiniz. Kelime 'koşu' idi.\n",
            "Yeniden oynamak ister misiniz? (E/H): h\n",
            "Oyun bitti. Tekrar görüşmek üzere!\n"
          ]
        }
      ],
      "source": [
        "from random import choice\n",
        "\n",
        "def select_word():\n",
        "    kelimeler = [\"bisiklet\", \"triatlon\", \"yüzme\", \"koşu\"]\n",
        "    return choice(kelimeler)\n",
        "\n",
        "def initialize_word(word):\n",
        "    return [\"_\" for _ in word]\n",
        "\n",
        "def display_state(dizilenKelime, adamCan):\n",
        "    print(\" \".join(dizilenKelime))\n",
        "    print(\"Kalan can: \" + str(adamCan))\n",
        "\n",
        "def get_guess():\n",
        "    return input(\"Bir harf giriniz: \").lower()\n",
        "\n",
        "def update_word(dizilenKelime, secilenKelime, girilenHarf):\n",
        "    for i, harf in enumerate(secilenKelime):\n",
        "        if harf == girilenHarf:\n",
        "            dizilenKelime[i] = harf\n",
        "\n",
        "def get_level():\n",
        "    levels = {'1': 'Kolay', '2': 'Orta', '3': 'Zor'}\n",
        "    lives = {'Kolay': 7, 'Orta': 5, 'Zor': 3}\n",
        "\n",
        "    while True:\n",
        "        print(\"Seviye seçin: 1 - Kolay, 2 - Orta, 3 - Zor\")\n",
        "        choice = input(\"Seçiminiz: \")\n",
        "        if choice in levels:\n",
        "            return lives[levels[choice]]\n",
        "        else:\n",
        "            print(\"Geçersiz seçim. Lütfen tekrar deneyin.\")\n",
        "\n",
        "def play_game():\n",
        "    secilenKelime = select_word()\n",
        "    dizilenKelime = initialize_word(secilenKelime)\n",
        "    adamCan = get_level()\n",
        "\n",
        "    print(\"Adam Asmaca Oyununa Hoşgeldiniz!\")\n",
        "    display_state(dizilenKelime, adamCan)\n",
        "\n",
        "    while adamCan > 0 and \"_\" in dizilenKelime:\n",
        "        girilenHarf = get_guess()\n",
        "        if girilenHarf in secilenKelime:\n",
        "            update_word(dizilenKelime, secilenKelime, girilenHarf)\n",
        "        else:\n",
        "            adamCan -= 1\n",
        "\n",
        "        display_state(dizilenKelime, adamCan)\n",
        "\n",
        "    if \"_\" not in dizilenKelime:\n",
        "        print(\"Tebrikler, kelimeyi doğru tahmin ettiniz! Kazandınız!\")\n",
        "    else:\n",
        "        print(f\"Maalesef, kaybettiniz. Kelime '{secilenKelime}' idi.\")\n",
        "\n",
        "    if play_again():\n",
        "        play_game()\n",
        "    else:\n",
        "        print(\"Oyun bitti. Tekrar görüşmek üzere!\")\n",
        "\n",
        "def play_again():\n",
        "    while True:\n",
        "        again = input(\"Yeniden oynamak ister misiniz? (E/H): \").lower()\n",
        "        if again == 'e':\n",
        "            return True\n",
        "        elif again == 'h':\n",
        "            return False\n",
        "        else:\n",
        "            print(\"Lütfen 'E' veya 'H' ile cevaplayın.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    play_game()\n"
      ]
    }
  ]
}